/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PUBLIC = 1;
  /** RegularExpression Id. */
  int STATIC = 2;
  /** RegularExpression Id. */
  int VOID = 3;
  /** RegularExpression Id. */
  int MAIN = 4;
  /** RegularExpression Id. */
  int STRING = 5;
  /** RegularExpression Id. */
  int RETURN = 6;
  /** RegularExpression Id. */
  int EXTENDS = 7;
  /** RegularExpression Id. */
  int INT = 8;
  /** RegularExpression Id. */
  int WHILE = 9;
  /** RegularExpression Id. */
  int BOOLEAN = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int LENGHT = 12;
  /** RegularExpression Id. */
  int TRUE = 13;
  /** RegularExpression Id. */
  int FALSE = 14;
  /** RegularExpression Id. */
  int THIS = 15;
  /** RegularExpression Id. */
  int NEW = 16;
  /** RegularExpression Id. */
  int PRINT = 17;
  /** RegularExpression Id. */
  int CLASS = 18;
  /** RegularExpression Id. */
  int NUMBER = 19;
  /** RegularExpression Id. */
  int PLUS = 20;
  /** RegularExpression Id. */
  int MINUS = 21;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"return\"",
    "\"extends\"",
    "\"int\"",
    "\"while\"",
    "\"boolean\"",
    "\"if\"",
    "\"lenght\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"System.out.printl\"",
    "\"class\"",
    "<NUMBER>",
    "\"+\"",
    "\"-\"",
    "\"integer_literal(NUMBER)\"",
    "\"identifier(NUMBER)\"",
    "\"(\"",
    "\")\"",
    "\")*\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\")?\"",
    "\";\"",
    "\"=\"",
    "\"&&\"",
    "\"<\"",
    "\"*\"",
    "\".\"",
    "\"!\"",
    "<token of kind 39>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
  };

}
