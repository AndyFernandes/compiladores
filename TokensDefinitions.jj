PARSER_BEGIN(Parser)

public class Parser{
	public static void main(String[] args) {
			try {
				new Parser(new java.io.StringReader(args[0])).empty();
				System.out.println("Syntax is okay");
			} catch (Throwable e) {
				// Catching Throwable is ugly but JavaCC throws Error objects!
				System.out.println("Syntax check failed: " + e.getMessage());
			}
		}
	//public static void main(String args[]) throws
	//ParseException{
	//	Parser parser = new Parser(System.in);
	//	while (true){
	//		parser.Start();
	//	}
	//}
}

PARSER_END(Parser)

TOKEN: {< PUBLIC : "public" > | 
	    < STATIC : "static" > |
        < VOID : "void" > |
        < MAIN : "main" > |
        < STRING : "String" > |
        < RETURN : "return" > |
        < EXTENDS : "extends" > |
        < INT : "int" > |
        < WHILE : "while" > |
        < BOOLEAN : "boolean" > |
        < IF : "if" > |
        < LENGHT : "lenght" > |
        < TRUE : "true" > |
        < FALSE : "false" > |
        < THIS : "this" > |
        < NEW : "new" > |
        < PRINT : "System.out.printl"> |
        < CLASS : "class"> |
        < NUMBER : ((["0"-"9"])+"."(["0"-"9"])*)|((["0"-"9"])*"."(["0"-"9"])+)>|
        < PLUS : "+" > |
        < MINUS : "-"> |

        "integer_literal(NUMBER)" |
        "identifier(NUMBER)" |
        "(" |
        ")" |
        ")*"|
        "[" |
        "]" |
        "{" |
        "}" |
        ")?"|
        ";" |
        "=" |
        "&&"|
        "<" |
        "*" |
        "." |
        "!" }
	   
SKIP : {<"--"(["a"-"z"])*("\n" | "\r" | "\r\n")> | " " | "\t" | "\n"}
void empty(): {}{<EOF>}